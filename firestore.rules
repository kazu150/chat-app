rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isAuthenticated() {
      return request.auth != null
    }

    function isUserAuthenticated(uid){
      return isAuthenticated() && request.auth.uid == uid;
    }

    function incomingData() {
      return request.resource.data;
    }

    match /publicProfiles/{uid} {
      allow create: if isUserAuthenticated(uid)
        && incomingData().size() == 4
        && (incomingData().name != null) && (incomingData().name is string) && (incomingData().name.size() == 0)
        && (incomingData().thumb != null) && (incomingData().thumb is string) && (incomingData().thumb.size() == 0)
        && (incomingData().createdAt != null) && (incomingData().createdAt is timestamp) && (incomingData().createdAt == request.time)
        && (incomingData().updatedAt != null) && (incomingData().updatedAt is timestamp) && (incomingData().updatedAt == request.time)
      allow update: if isUserAuthenticated(uid)
        && incomingData().size() == 4
        && (incomingData().name != null) && (incomingData().name is string) && (incomingData().name.size() < 20)
        && (incomingData().thumb != null) && (incomingData().thumb is string) && (incomingData().thumb.size() < 400)
        && (incomingData().createdAt != null) && (incomingData().createdAt is timestamp) && (incomingData().createdAt <= request.time)
        && (incomingData().updatedAt != null) && (incomingData().updatedAt is timestamp) && (incomingData().updatedAt == request.time)
      allow read: if isAuthenticated();
    }

    match /rooms/{roomid} {
      allow create: if isAuthenticated()
        && incomingData().size() == 3
        && (incomingData().createdAt != null) && (incomingData().createdAt is timestamp) && (incomingData().createdAt == request.time)
        && (incomingData().description != null) && (incomingData().description is string) && (incomingData().description <= 30)
        && (incomingData().title != null) && (incomingData().title is string) && (incomingData().title <= 10)
      allow read: if isAuthenticated()
    }

    match /rooms/{roomid}/chats/{chatid} {
      allow create: if isAuthenticated()
        && incomingData().size() == 3
        && (incomingData().createdAt != null) && (incomingData().date is timestamp) && (incomingData().createdAt == request.time)
        && (incomingData().description != null) && (incomingData().description is string) && (incomingData().description <= 100)
        && (incomingData().publicProfiles != null) && (incomingData().publicProfiles is path)
      allow read: if isAuthenticated();
    }
  }
}